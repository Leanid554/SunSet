import React, { useState, useEffect } from "react";
import axios from "axios";

const API_BASE_URL = "https://testapp-backend-eynpzx-3ec2cf-217-154-81-219.traefik.me";

const AddLecture = ({ lectures, setLectures }) => {
  const [blocks, setBlocks] = useState([]); 
  const [newLecture, setNewLecture] = useState({ blockId: "", title: "" });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetchBlocks();
  }, []);

  const fetchBlocks = async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/blocks`);
      setBlocks(response.data);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –±–ª–æ–∫–æ–≤:", err);
      setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–ª–æ–∫–∏");
    }
  };

  const addLecture = async () => {
    if (!newLecture.blockId || newLecture.title.trim() === "") return;

    setLoading(true);
    setError(null);

    try {
      const response = await axios.post(`${API_BASE_URL}/lectures`, {
        title: newLecture.title,
        blockId: parseInt(newLecture.blockId),
      });

      setLectures([...lectures, response.data]); // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ª–µ–∫—Ü–∏—é –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setNewLecture({ blockId: "", title: "" });
    } catch (err) {
      setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ª–µ–∫—Ü–∏–∏");
      console.error("–û—à–∏–±–∫–∞:", err);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="admin-section">
      <h3>üìñ –î–æ–±–∞–≤–∏—Ç—å –ª–µ–∫—Ü–∏—é</h3>
      
      {error && <p style={{ color: "red" }}>{error}</p>}

      <select
        value={newLecture.blockId}
        onChange={(e) => setNewLecture({ ...newLecture, blockId: e.target.value })}
      >
        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –±–ª–æ–∫</option>
        {blocks.length > 0 ? (
          blocks.map((block) => (
            <option key={block.id} value={block.id}>
              {block.title}
            </option>
          ))
        ) : (
          <option disabled>–ó–∞–≥—Ä—É–∑–∫–∞ –±–ª–æ–∫–æ–≤...</option>
        )}
      </select>

      <input
        type="text"
        placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –ª–µ–∫—Ü–∏–∏"
        value={newLecture.title}
        onChange={(e) => setNewLecture({ ...newLecture, title: e.target.value })}
      />

      <button onClick={addLecture} disabled={loading}>
        {loading ? "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ..." : "‚ûï –î–æ–±–∞–≤–∏—Ç—å"}
      </button>
    </div>
  );
};

export default AddLecture;
