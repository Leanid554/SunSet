import React, { useState, useEffect } from "react";
import axios from "axios";

const API_BASE_URL = "https://testapp-backend-eynpzx-3ec2cf-217-154-81-219.traefik.me";

const UserStats = ({ users }) => {
  const [selectedEmail, setSelectedEmail] = useState("");
  const [stats, setStats] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const fetchStats = async () => {
    if (!selectedEmail) {
      alert("–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!");
      return;
    }

    setLoading(true);
    setError(null);

    try {
      const response = await axios.post(`${API_BASE_URL}/user-stats`, {
        email: selectedEmail,
      });

      console.log("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", response.data);
      setStats(response.data);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", err);
      setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="user-stats">
      <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</h3>

      {/* –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      <label>
        –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
        <select value={selectedEmail} onChange={(e) => setSelectedEmail(e.target.value)}>
          <option value="">-- –í—ã–±–µ—Ä–∏—Ç–µ --</option>
          {users.map((user) => (
            <option key={user.id} value={user.email}>
              {user.email}
            </option>
          ))}
        </select>
      </label>
      <button onClick={fetchStats}>üì© –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</button>

      {/* –°—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—à–∏–±–∫–∏ */}
      {loading && <p>–ó–∞–≥—Ä—É–∑–∫–∞...</p>}
      {error && <p style={{ color: "red" }}>{error}</p>}

      {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
      {stats && (
        <div className="stats-data">
          <h4>üìÖ –í–∏–∑–∏—Ç—ã:</h4>
          <ul>
            {stats.visits.map((visit, index) => (
              <li key={index}>
                –í—Ö–æ–¥: {new Date(visit.entryTime).toLocaleString()} | –í—ã—Ö–æ–¥: {visit.exitTime ? new Date(visit.exitTime).toLocaleString() : "–ï—â–µ –≤ —Å–∏—Å—Ç–µ–º–µ"}
              </li>
            ))}
          </ul>

          <h4>üì¶ –ë–ª–æ–∫–∏:</h4>
          <ul>
            {stats.blockVisits.map((block) => (
              <li key={block.blockId}>
                {block.block.title} (–ü–æ—Å–µ—â–µ–Ω–∏–π: {block.count})
              </li>
            ))}
          </ul>

          <h4>üìö –õ–µ–∫—Ü–∏–∏:</h4>
          <ul>
            {stats.lectureVisits.map((lecture) => (
              <li key={lecture.lectureId}>
                {lecture.lecture.title} (–ü–æ—Å–µ—â–µ–Ω–∏–π: {lecture.count})
              </li>
            ))}
          </ul>

          <h4>‚úÖ –ü—Ä–æ–≥—Ä–µ—Å—Å:</h4>
          <ul>
            {stats.lectureProgress.map((progress) => (
              <li key={progress.lectureId}>
                {progress.lecture.title} - {progress.passed ? "–ü—Ä–æ–π–¥–µ–Ω–æ" : "–ù–µ –ø—Ä–æ–π–¥–µ–Ω–æ"} (–ü–æ–ø—ã—Ç–æ–∫: {progress.attempts})
              </li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
};

export default UserStats;
