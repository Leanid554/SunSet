import React, { useState, useEffect } from "react";
import axios from "axios";
import AddBlock from "../../components/Admin/AddBlock";
import AddLecture from "../../components/Admin/AddLecture";
import AddUser from "../../components/Admin/AddUser";
import UserList from "../../components/Admin/UserList";
import UploadVideo from "../../components/Admin/UploadVideo";
import QuestionVideo from "../../components/Admin/QuestionVideo.jsx";
import UserStats from "../../components/Admin/UserStats";
import "./index.scss";

const API_BASE_URL = "https://testapp-backend-eynpzx-3ec2cf-217-154-81-219.traefik.me";

const AdminPage = () => {
  const [blocks, setBlocks] = useState([]);
  const [lectures, setLectures] = useState([]);
  const [users, setUsers] = useState([]);
  const [selectedLectureId, setSelectedLectureId] = useState(null);
  const [lecturesVisible, setLecturesVisible] = useState(false);
  const [blocksVisible, setBlocksVisible] = useState(false);
  const [usersVisible, setUsersVisible] = useState(false);
  const [statsVisible, setStatsVisible] = useState(false);

  useEffect(() => {
    fetchUsers();
    fetchBlocks();
    fetchLectures();
  }, []);

  const fetchUsers = async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/users`);
      setUsers(response.data);
      localStorage.setItem("users", JSON.stringify(response.data));
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", error);
      const storedUsers = localStorage.getItem("users");
      if (storedUsers) {
        setUsers(JSON.parse(storedUsers));
      }
    }
  };

  const fetchBlocks = async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/blocks`);
      setBlocks(response.data);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–ª–æ–∫–æ–≤:", error);
    }
  };

  const fetchLectures = async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/lectures`);
      setLectures(response.data);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–µ–∫—Ü–∏–π:", error);
    }
  };

  const deleteLecture = async (lectureId) => {
    try {
      await axios.delete(`${API_BASE_URL}/lectures/${lectureId}`);
      setLectures(lectures.filter((lecture) => lecture.id !== lectureId));
      alert("–õ–µ–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–µ–∫—Ü–∏–∏:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–µ–∫—Ü–∏–∏");
    }
  };

  const deleteBlock = async (blockId) => {
    try {
      await axios.delete(`${API_BASE_URL}/blocks/${blockId}`);
      setBlocks(blocks.filter((block) => block.id !== blockId));
      alert("–ë–ª–æ–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±–ª–æ–∫–∞:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±–ª–æ–∫–∞");
    }
  };

  const getBlockTitle = (blockId) => {
    const block = blocks.find((block) => block.id === blockId);
    return block ? block.title : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–ª–æ–∫";
  };

  return (
    <div className="admin-page">
      <h2>üìå –ü–∞–Ω–µ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>

      {/* –î–æ–±–∞–≤–ª–µ–Ω–∏–µ */}
      <div className="dodawanie-container">
        <h3>üõ† –î–æ–±–∞–≤–ª–µ–Ω–∏–µ</h3>
        <AddBlock blocks={blocks} setBlocks={setBlocks} />
        <AddLecture blocks={blocks} lectures={lectures} setLectures={setLectures} />
        <AddUser users={users} setUsers={setUsers} />
      </div>

      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
      <div className="zarzadzanie-container">
        <h3>‚öô –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h3>

        {/* –ë–ª–æ–∫–∏ */}
        <div className="admin-section">
          <h3>üì¶ –ë–ª–æ–∫–∏</h3>
          <button onClick={() => setBlocksVisible(!blocksVisible)}>
            {blocksVisible ? "–°–∫—Ä—ã—Ç—å" : "–ü–æ–∫–∞–∑–∞—Ç—å"}
          </button>
          {blocksVisible && blocks.length > 0 && (
            <ul>
              {blocks.map((block) => (
                <li key={block.id}>
                  <strong>{block.title}</strong> (ID: {block.id})
                  <button onClick={() => deleteBlock(block.id)}>–£–¥–∞–ª–∏—Ç—å</button>
                </li>
              ))}
            </ul>
          )}
        </div>

        {/* –õ–µ–∫—Ü–∏–∏ */}
        <div className="admin-section">
          <h3>üìö –õ–µ–∫—Ü–∏–∏</h3>
          <button onClick={() => setLecturesVisible(!lecturesVisible)}>
            {lecturesVisible ? "–°–∫—Ä—ã—Ç—å" : "–ü–æ–∫–∞–∑–∞—Ç—å"}
          </button>
          {lecturesVisible && lectures.length > 0 && (
            <ul>
              {lectures.map((lecture) => (
                <li key={lecture.id}>
                  <strong>{lecture.title}</strong> (ID: {lecture.id}) | –ë–ª–æ–∫: {getBlockTitle(lecture.blockId)}
                  <button onClick={() => deleteLecture(lecture.id)}>–£–¥–∞–ª–∏—Ç—å</button>
                  <UploadVideo lectureId={lecture.id} />
                  <button onClick={() => setSelectedLectureId(lecture.id)}>
                    –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å—ã
                  </button>
                  {selectedLectureId === lecture.id && <QuestionVideo lectureId={lecture.id} />}
                </li>
              ))}
            </ul>
          )}
        </div>

        {/* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ */}
        <div className="admin-section">
          <h3>üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h3>
          <button onClick={() => setUsersVisible(!usersVisible)}>
            {usersVisible ? "–°–∫—Ä—ã—Ç—å" : "–ü–æ–∫–∞–∑–∞—Ç—å"}
          </button>
          {usersVisible && <UserList users={users} />}
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
        <div className="admin-section">
          <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h3>
          <button onClick={() => setStatsVisible(!statsVisible)}>
            {statsVisible ? "–°–∫—Ä—ã—Ç—å" : "–ü–æ–∫–∞–∑–∞—Ç—å"}
          </button>
          {statsVisible && <UserStats users={users} />}
        </div>
      </div>
    </div>
  );
};

export default AdminPage;
