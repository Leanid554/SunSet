import React, { useState, useEffect } from "react";
import axios from "axios";
import AddBlock from "../../components/Admin/AddBlock";
import AddLecture from "../../components/Admin/AddLecture";
import AddUser from "../../components/Admin/AddUser";
import UserList from "../../components/Admin/UserList";
import UploadVideo from "../../components/Admin/UploadVideo"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ
import AddQuestionToVideo from "../../components/Admin/AddQuestionToVideo"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤
import "./index.scss";

const API_BASE_URL = "https://testapp-backend-eynpzx-3ec2cf-217-154-81-219.traefik.me";

const AdminPage = () => {
  const [blocks, setBlocks] = useState([]);
  const [lectures, setLectures] = useState([]);
  const [users, setUsers] = useState([]);
  const [questions, setQuestions] = useState([]); // –•—Ä–∞–Ω–∏–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –≤–∏–¥–µ–æ
  const [selectedUserEmail, setSelectedUserEmail] = useState("");
  const [lecturesVisible, setLecturesVisible] = useState(true);
  const [blocksVisible, setBlocksVisible] = useState(true);

  useEffect(() => {
    fetchUsers();
    fetchBlocks();
    fetchLectures();
  }, []);

  const fetchUsers = async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/users`);
      setUsers(response.data);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", error);
    }
  };

  const fetchBlocks = async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/blocks`);
      setBlocks(response.data);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–ª–æ–∫–æ–≤:", error);
    }
  };

  const fetchLectures = async () => {
    try {
      const response = await axios.get(`${API_BASE_URL}/lectures`);
      setLectures(response.data);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ª–µ–∫—Ü–∏–π:", error);
    }
  };

  const deleteLecture = async (lectureId) => {
    try {
      await axios.delete(`${API_BASE_URL}/lectures/${lectureId}`);
      setLectures(lectures.filter(lecture => lecture.id !== lectureId));
      alert("–õ–µ–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–µ–∫—Ü–∏–∏:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–µ–∫—Ü–∏–∏");
    }
  };

  const deleteBlock = async (blockId) => {
    try {
      await axios.delete(`${API_BASE_URL}/blocks/${blockId}`);
      setBlocks(blocks.filter(block => block.id !== blockId));
      alert("–ë–ª–æ–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω");
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±–ª–æ–∫–∞:", error);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±–ª–æ–∫–∞");
    }
  };

  const getBlockTitle = (blockId) => {
    const block = blocks.find(block => block.id === blockId);
    return block ? block.title : "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±–ª–æ–∫";
  };

  const handleQuestionAdded = (newQuestion) => {
    setQuestions([...questions, newQuestion]);
  };

  return (
    <div className="admin-page">
      <h2>üìå –ü–∞–Ω–µ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h2>

      {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–ª–æ–∫–æ–≤, –ª–µ–∫—Ü–∏–π –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      <AddBlock blocks={blocks} setBlocks={setBlocks} fetchBlocks={fetchBlocks} />
      <AddLecture blocks={blocks} lectures={lectures} setLectures={setLectures} />
      <AddUser users={users} setUsers={setUsers} />
      <UserList users={users} />

      {/* –°–µ–∫—Ü–∏—è –ª–µ–∫—Ü–∏–π */}
      <div className="admin-section">
        <h3>üìö –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ª–µ–∫—Ü–∏–π</h3>
        <button onClick={() => setLecturesVisible(!lecturesVisible)}>
          {lecturesVisible ? "–°–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –ª–µ–∫—Ü–∏–π" : "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ª–µ–∫—Ü–∏–π"}
        </button>

        {lecturesVisible && lectures.length > 0 && (
          <ul>
            {lectures.map((lecture) => (
              <li key={lecture.id}>
                <strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> {lecture.title} |
                <strong> ID:</strong> {lecture.id} |
                <strong> –ë–ª–æ–∫:</strong> {getBlockTitle(lecture.blockId)} (ID: {lecture.blockId}) |
                <button onClick={() => deleteLecture(lecture.id)}>–£–¥–∞–ª–∏—Ç—å –ª–µ–∫—Ü–∏—é</button>

                {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ –≤ –ª–µ–∫—Ü–∏—é */}
                <UploadVideo lectureId={lecture.id} />

                {/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∫ –≤–∏–¥–µ–æ */}
                <AddQuestionToVideo
                  lectureId={lecture.id}
                  onQuestionAdded={handleQuestionAdded}
                />
              </li>
            ))}
          </ul>
        )}
      </div>

      {/* –°–µ–∫—Ü–∏—è –±–ª–æ–∫–æ–≤ */}
      <div className="admin-section">
        <h3>üì¶ –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤</h3>
        <button onClick={() => setBlocksVisible(!blocksVisible)}>
          {blocksVisible ? "–°–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫ –±–ª–æ–∫–æ–≤" : "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –±–ª–æ–∫–æ–≤"}
        </button>

        {blocksVisible && blocks.length > 0 && (
          <ul>
            {blocks.map((block) => (
              <li key={block.id}>
                <strong>–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª–æ–∫–∞:</strong> {block.title} |
                <strong> ID:</strong> {block.id} |
                <button onClick={() => deleteBlock(block.id)}>–£–¥–∞–ª–∏—Ç—å –±–ª–æ–∫</button>
              </li>
            ))}
          </ul>
        )}
      </div>

      {/* –°–µ–∫—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ */}
      <div className="admin-section">
        <h3>‚úçÔ∏è –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –∫ –≤–∏–¥–µ–æ</h3>
        <ul>
          {questions.map((question, index) => (
            <li key={index}>
              <strong>–í–æ–ø—Ä–æ—Å:</strong> {question.question} | 
              <strong> –í—Ä–µ–º—è:</strong> {question.timestamp} —Å–µ–∫ | 
              <strong> –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</strong> {question.correctAnswer}
            </li>
          ))}
        </ul>
      </div>
    </div>
  );
};

export default AdminPage;
